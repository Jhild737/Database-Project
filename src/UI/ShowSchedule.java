/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.FDeskAgent;
import Model.Housekeeper;
import Model.Schedule;
import database.Database;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tojol
 */
public class ShowSchedule extends javax.swing.JFrame {

    /**
     * Creates new form ShowSchedule
     */
    public ShowSchedule() {
        initComponents();
        Date today = Calendar.getInstance().getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
        dateSelector.setText(sdf.format(today));
        
        String[] columns = {"Employee Name", "Date Working", "Start Time", "End Time", "Worker Type"};
        List<Model.Schedule> schedule = Database.getScheduleForDay(today);
        String data[][] = new String[schedule.size()][5];
        for(int i = 0; i < schedule.size(); i++){
            FDeskAgent agent = Database.getAgentByID(schedule.get(i).getStaffNo());
            if(agent == null){
                Housekeeper keeper = Database.getHousekeeperByID(schedule.get(i).getStaffNo());
                data[i][0] = keeper.getfName() + " " + keeper.getlName();
                data[i][1] = sdf.format(schedule.get(i).getDate());
                data[i][2] = schedule.get(i).getStartTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                data[i][3] = schedule.get(i).getEndTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                data[i][4] = "Housekeeper";
            } else{
                data[i][0] = agent.getfName() + " " + agent.getlName();
                data[i][1] = sdf.format(schedule.get(i).getDate());
                data[i][2] = schedule.get(i).getStartTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                data[i][3] = schedule.get(i).getEndTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                data[i][4] = "Front Desk";
            }
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        table.setModel(model);
        
        showButton.addActionListener((ActionEvent e) -> {
            try {
                Date date = sdf.parse(dateSelector.getText());
                List<Schedule> newSchedule = Database.getScheduleForDay(date);
                String data2[][] = new String[schedule.size()][5];
                for(int i = 0; i < newSchedule.size(); i++){
                    FDeskAgent agent = Database.getAgentByID(schedule.get(i).getStaffNo());
                    if(agent == null){
                        Housekeeper keeper = Database.getHousekeeperByID(schedule.get(i).getStaffNo());
                        data2[i][0] = keeper.getfName() + " " + keeper.getlName();
                        data2[i][1] = sdf.format(newSchedule.get(i).getDate());
                        data2[i][2] = newSchedule.get(i).getStartTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                        data2[i][3] = newSchedule.get(i).getEndTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                        data2[i][4] = "Housekeeper";
                    } else{
                        data2[i][0] = agent.getfName() + " " + agent.getlName();
                        data2[i][1] = sdf.format(schedule.get(i).getDate());
                        data2[i][2] = schedule.get(i).getStartTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                        data2[i][3] = schedule.get(i).getEndTime().format(DateTimeFormatter.ISO_LOCAL_TIME);
                        data2[i][4] = "Front Desk";
                    }
                }
                DefaultTableModel model2 = new DefaultTableModel(data2, columns);
                table.setModel(model2);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Incorrect date format");
            }
        });
        closeBtn.addActionListener((ActionEvent e) -> {
            this.dispose();
        });
        addBtn.addActionListener((ActionEvent e) -> {
            AddToSchedule sched = new AddToSchedule();
            sched.setVisible(true);
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        dateSelector = new javax.swing.JTextField();
        showButton = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Date:");

        showButton.setText("Show");

        closeBtn.setText("Close");

        addBtn.setText("Add To Schedule");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(dateSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(showButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(closeBtn)
                        .addGap(18, 18, 18)
                        .addComponent(addBtn)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn)
                    .addComponent(addBtn))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextField dateSelector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
